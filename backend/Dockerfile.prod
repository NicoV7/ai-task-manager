FROM python:3.11-slim

# Environment
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONPATH=/app

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        postgresql-client \
        netcat-traditional \
        curl \
        gcc \
        libc6-dev \
        libpq-dev \
        git \
        build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set work directory inside container
WORKDIR /app

# Copy backend requirements and install
COPY backend/requirements.txt ./requirements.txt
RUN pip install --no-cache-dir --upgrade pip setuptools wheel \
    && pip install --no-cache-dir -r requirements.txt

# Copy backend project files only
COPY backend/ .

# Create non-root user and set permissions
RUN adduser --disabled-password --gecos '' appuser \
    && chown -R appuser:appuser /app \
    && chmod +x /app/manage.py

USER appuser

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8000}/health/ || exit 1

# Startup script
RUN echo '#!/bin/bash\n\
set -e\n\
echo "Starting Django application..."\n\
echo "Waiting for database..."\n\
python -c "import os, django; os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"taskmanager.settings.production\"); django.setup(); from django.db import connection; connection.ensure_connection()"\n\
echo "Running migrations..."\n\
python manage.py migrate --noinput\n\
echo "Creating cache table..."\n\
python manage.py createcachetable\n\
echo "Collecting static files..."\n\
python manage.py collectstatic --noinput --clear\n\
echo "Starting Gunicorn server on port ${PORT:-8000}..."\n\
exec gunicorn taskmanager.wsgi:application \\\n\
    --bind 0.0.0.0:${PORT:-8000} \\\n\
    --workers ${GUNICORN_WORKERS:-2} \\\n\
    --worker-class gthread \\\n\
    --worker-connections ${GUNICORN_CONNECTIONS:-1000} \\\n\
    --max-requests 1000 \\\n\
    --max-requests-jitter 100 \\\n\
    --timeout 60 \\\n\
    --keep-alive 2 \\\n\
    --log-level ${LOG_LEVEL:-info} \\\n\
    --access-logfile - \\\n\
    --error-logfile - \\\n\
    --preload' > /app/start.sh && chmod +x /app/start.sh

CMD ["/app/start.sh"]