FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        postgresql-client \
        netcat-traditional \
        curl \
        gcc \
        libc6-dev \
        libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /app

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt \
    && pip install --no-cache-dir gunicorn

# Copy project
COPY . .

# Create staticfiles directory
RUN mkdir -p /app/staticfiles

# Create non-root user
RUN adduser --disabled-password --gecos '' appuser \
    && chown -R appuser:appuser /app
USER appuser

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health/ || exit 1

# Production command
CMD ["sh", "-c", "\
    set -e && \
    echo 'Waiting for database...' && \
    while ! nc -z db 5432; do sleep 1; done && \
    echo 'Database is ready!' && \
    echo 'Running migrations...' && \
    python manage.py migrate --noinput && \
    echo 'Collecting static files...' && \
    python manage.py collectstatic --noinput && \
    echo 'Starting Gunicorn server...' && \
    gunicorn taskmanager.wsgi:application \
        --bind 0.0.0.0:8000 \
        --workers ${GUNICORN_WORKERS:-4} \
        --worker-connections ${GUNICORN_CONNECTIONS:-1000} \
        --max-requests 1000 \
        --max-requests-jitter 100 \
        --timeout 60 \
        --keep-alive 2 \
        --log-level ${LOG_LEVEL:-info} \
        --access-logfile - \
        --error-logfile - \
    "]